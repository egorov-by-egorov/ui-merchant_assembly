stages:
  - build
  - docker-build
  - trigger-update

build:
  stage: build
  image:
    name: node:17.0.1
  only:
    - tags
  script:
    - npm i -g handlebars
    - |
      NODE_PATH=/usr/local/lib/node_modules node -e 'const hbr = require("handlebars");const template = hbr.compile(fs.readFileSync("default.conf.tmpl").toString());fs.writeFileSync("default.conf",template({etag: Date.now()}))'
    - node -e 'let package=JSON.parse(fs.readFileSync("package.json"));package.version=process.argv[1];fs.writeFileSync("package.json",JSON.stringify(package))' $CI_COMMIT_TAG
    - yarn
    - CI=false yarn run build
  artifacts:
    paths:
      - build/
      - default.conf

docker-build:
  stage: docker-build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  only:
    - tags
  script:
    - echo "{\"auths\":{\"$DOCKER_REGISTRY\":{\"username\":\"$DOCKER_REGISTRY_USER\",\"password\":\"$DOCKER_REGISTRY_PASS\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $DOCKER_REGISTRY/$DOCKER_REGISTRY_PROJ/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  dependencies:
    - build

trigger-update:
  stage: trigger-update
  image:
    name: curlimages/curl:7.73.0
    entrypoint: [ "" ]
  only:
    - tags
  script:
    - curl -X POST -F "token=$ARGO_TOKEN" -F "ref=$ARGO_REF" -F "variables[PROJECT_NAME]=$CI_PROJECT_NAME" -F "variables[TAG]=$CI_COMMIT_TAG" "$ARGO_TRIGGER_URL"
  dependencies:
    - docker-build
